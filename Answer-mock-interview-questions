Interview qestion 1: If I wanted to use local configuration on a linux host, and DNS wasn't available. What configuration file do I modify to allow my host to ssh to other hosts using alias or some other naming convention tied to an IP address? 
Answer to question one: /etc/hosts file in my linux host and I would create an entry for each host I wanted it for. Example under the loopback address of 127.0.0.1  I would create an entry like the following 10.0.0.4 web1.somedomain.com.
Interview qestion 2: What are the pro's and con's of cloud services ?
Answer to question two: Cons: Risk of data confidentiality There is always a risk that user data can be accessed by other people. So data and cloud protection must be good because if it won’t be dangerous for data confidentiality.
Second Con: The level of security Secrecy and security are among the most doubtful things in cloud computing. By using a cloud computing system means we are fully entrusted with the security and confidentiality of data to companies that provide cloud computing servers. When you experience a problem, you cannot sue the server for errors in the data. When you experience a problem, you cannot sue the server for errors in the data.
Pro: Cost Savings: If you are worried about the price tag that would come with making the switch to cloud computing, you aren't alone 20% of organizations are concerned about the initial cost of implementing a cloud-based server. But those who are attempting to weigh the advantages and disadvantages of using the cloud need to consider more factors than just initial price they need to consider ROI.
Once you're on the cloud, easy access to your company's data will save time and money in project startups. And, for those who are worried that they'll end up paying for features that they neither need nor want, most cloud-computing services are pay as you go. This means that if you don't take advantage of what the cloud has to offer, then at least you won't have to be dropping money on it. 
Second pro: Security: Many organizations have security concerns when it comes to adopting a cloud-computing solution. After all, when files, programs, and other data aren't kept securely onsite, how can you know that they are being protected? If you can remotely access your data, then what's stopping a cybercriminal from doing the same thing? Well, quite a bit, actually.
For one thing, a cloud host's full-time job is to carefully monitor security, which is significantly more efficient than a conventional in-house system, where an organization must divide its efforts between a myriad of IT concerns, with security being only one of them.
Interview question 3: What is SaaS, PaaS, IaaS, DaaS? And give examples of each where a business would use them ?
Answer to question 3: Software as a service (SaaS) Platform as a service (PaaS) Infrastructure as a service (IaaS) Desktop as a service (DaaS). (SaaS) SaaS enables users to access cloud-based applications via an internet connection and password. A user does not own the software or application, nor are they stored anywhere on the device used to access them. End users simply access the software and application through a web browser.
(PaaS) Companies that have multiple developers working on the same project can use PaaS to give all users management of accounts to test, deploy, host, and maintain applications throughout their lifecycle. Performing such tasks typically requires a lot of data, but PaaS helps manage the data load to keep it balanced.
(IaaS) increase business availability and consistency: The service provider handles troubleshooting and ensures your infrastructure is dependable.
Offload datacenter management: Leveraging cloud infrastructure frees IT teams from tending to on-premises datacenters and allows them to focus on more strategic initiatives.
(DaaS) A similar option for companies looking to allow end users access to files and applications is virtual desktop infrastructure (VDI). Both a VDI and DaaS solution offer virtual desktops that allow users to run a desktop environment and access any applications on it — however, in the case of VDI, a company’s in-house IT team handles the upkeep and management of the infrastructure.
Interview qestion 4: What three ports did ELK use on Startup?
Answer to question 4: This command publishes the following ports, which are needed for proper operation of the ELK stack: 5601 (Kibana web interface). 9200 (Elasticsearch JSON interface). 5044 (Logstash Beats interface, receives logs from Beats such as Filebeat
Interview question 5: You have a docker container that keeps "exiting" out and won't stay up. What debugging steps would you use to resolve your docker container problem
Answer question 5: 5 ways to do Debugging in your bash. docker logs <container_id> Hopefully you’ve already tried this, but if not, start here. This’ll give you the full STDOUT and STDERR from the command that was run initially in your container.
docker stats <container_id>
If you just need to keep an eye on the metrics of your container to work out what’s gone wrong, docker stats can help: it’ll give you a live stream of resource usage, so you can see just how much memory you’ve leaked so far.
docker cp <container_id>:/path/to/useful/file /local-path
Often just getting hold of more log files is enough to sort you out. If you already know what you want, docker cp has your back: copy any file from any container back out onto your local machine, so you can examine it in depth (especially useful analysing heap dumps).
docker exec -it <container_id> /bin/bash
Next up, if you can run the container (if it’s crashed, you can restart it with docker start <container_id>), shell in directly and start digging around for further details by hand.
docker commit <container_id> my-broken-container &&
docker run -it my-broken-container /bin/bash
Can’t start your container at all? If you’ve got a initial command or entrypoint that immediately crashes, Docker will immediately shut it back down for you. This can make your container unstartable, so you can’t shell in any more, which really gets in the way.
Fortunately, there’s a workaround: save the current state of the shut-down container as a new image, and start that with a different command to avoid your existing failures.
Have a failing entrypoint instead? There’s an entrypoint override command-line flag too.
